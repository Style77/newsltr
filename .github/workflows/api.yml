name: API Pre-Deploy

on:
  push:
    paths:
      - 'newsltr/**'
      - '.github/workflows/**'
    branches:
      - main
      - master
      - develop
  pull_request:
    paths:
      - 'newsltr/**'
      - '.github/workflows/**'
    branches:
      - main
      - master
      - develop

jobs:
  lint:
    name: Lint Python Code
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11 

      - name: Install dependencies
        run: |
          pip install -r newsltr/requirements.txt
          pip install flake8

      - name: Lint Python code
        working-directory: newsltr
        run: |
          flake8 .
          
  test:
    name: Run Django Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports: ['5432:5432']
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/newsltr/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r newsltr/requirements.txt
        if: steps.cache.outputs.cache-hit != 'true'
      - name: Run Django Tests
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres
          DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
          REDIS_URL: ${{ secrets.REDIS_URL }}
          EMAIL_HOST_USER: ${{ secrets.EMAIL_HOST_USER }}
          EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}
          EMAIL_HOST: ${{ secrets.EMAIL_HOST }}
          SENDINBLUE_API_KEY: ${{ secrets.SENDINBLUE_API_KEY }}
          STRIPE_SECRET_KEY_TEST: ${{ secrets.STRIPE_SECRET_KEY_TEST }}
          STRIPE_PUBLISHABLE_KEY_TEST: ${{ secrets.STRIPE_PUBLISHABLE_KEY_TEST }}
        working-directory: newsltr
        run: |
          python manage.py test --noinput