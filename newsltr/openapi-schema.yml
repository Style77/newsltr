openapi: 3.0.3
info:
  title: Newsltr
  version: 1.0.0
  description: Newsltr API Documentation
paths:
  /api/v1/auth/jwt/create/:
    post:
      operationId: api_v1_auth_jwt_create_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomTokenObtainPair'
          description: ''
  /api/v1/auth/jwt/refresh/:
    post:
      operationId: api_v1_auth_jwt_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/v1/auth/jwt/verify/:
    post:
      operationId: api_v1_auth_jwt_verify_create
      description: Takes a token and returns correct HTTP status if it is valid or
        not.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomTokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomTokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomTokenVerify'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomTokenVerify'
          description: ''
  /api/v1/auth/logout/:
    post:
      operationId: api_v1_auth_logout_create
      description: Logout user by deleting cookies.
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/v1/auth/users/:
    get:
      operationId: api_v1_auth_users_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCustomUserList'
          description: ''
    post:
      operationId: api_v1_auth_users_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomUserCreateSerliazier'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomUserCreateSerliazier'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomUserCreateSerliazier'
        required: true
      security:
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUserCreateSerliazier'
          description: ''
  /api/v1/auth/users/{id}/:
    get:
      operationId: api_v1_auth_users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this user.
        required: true
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
    put:
      operationId: api_v1_auth_users_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this user.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomUser'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
    patch:
      operationId: api_v1_auth_users_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this user.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCustomUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCustomUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCustomUser'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
    delete:
      operationId: api_v1_auth_users_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this user.
        required: true
      tags:
      - api
      responses:
        '204':
          description: No response body
  /api/v1/auth/users/activation/:
    post:
      operationId: api_v1_auth_users_activation_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Activation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Activation'
        required: true
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activation'
          description: ''
  /api/v1/auth/users/me/:
    get:
      operationId: api_v1_auth_users_me_retrieve
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentUser'
          description: ''
    put:
      operationId: api_v1_auth_users_me_update
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CurrentUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CurrentUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CurrentUser'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentUser'
          description: ''
    patch:
      operationId: api_v1_auth_users_me_partial_update
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCurrentUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCurrentUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCurrentUser'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentUser'
          description: ''
    delete:
      operationId: api_v1_auth_users_me_destroy
      tags:
      - api
      responses:
        '204':
          description: No response body
  /api/v1/auth/users/resend_activation/:
    post:
      operationId: api_v1_auth_users_resend_activation_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
        required: true
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /api/v1/auth/users/reset_email/:
    post:
      operationId: api_v1_auth_users_reset_email_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
        required: true
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /api/v1/auth/users/reset_email_confirm/:
    post:
      operationId: api_v1_auth_users_reset_email_confirm_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
        required: true
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsernameResetConfirm'
          description: ''
  /api/v1/auth/users/reset_password/:
    post:
      operationId: api_v1_auth_users_reset_password_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
        required: true
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /api/v1/auth/users/reset_password_confirm/:
    post:
      operationId: api_v1_auth_users_reset_password_confirm_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRetype'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRetype'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRetype'
        required: true
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirmRetype'
          description: ''
  /api/v1/auth/users/set_email/:
    post:
      operationId: api_v1_auth_users_set_email_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetUsername'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetUsername'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetUsername'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetUsername'
          description: ''
  /api/v1/auth/users/set_password/:
    post:
      operationId: api_v1_auth_users_set_password_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetPasswordRetype'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetPasswordRetype'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetPasswordRetype'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetPasswordRetype'
          description: ''
  /api/v1/campaigns/{campaign_id}/subscribers/:
    get:
      operationId: api_v1_campaigns_subscribers_retrieve
      parameters:
      - in: path
        name: campaign_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - campaigns
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignSubscriber'
          description: ''
  /api/v1/campaigns/{campaign_id}/subscribers/user/:
    post:
      operationId: api_v1_campaigns_subscribers_user_create
      parameters:
      - in: path
        name: campaign_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - campaigns
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CampaignSubscriber'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CampaignSubscriber'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CampaignSubscriber'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignSubscriber'
          description: ''
  /api/v1/campaigns/{campaign_id}/subscribers/user/{user_id}/:
    get:
      operationId: api_v1_campaigns_subscribers_user_retrieve
      parameters:
      - in: path
        name: campaign_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: user_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - campaigns
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignSubscriber'
          description: ''
    put:
      operationId: api_v1_campaigns_subscribers_user_update
      parameters:
      - in: path
        name: campaign_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: user_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - campaigns
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CampaignSubscriber'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CampaignSubscriber'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CampaignSubscriber'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignSubscriber'
          description: ''
    patch:
      operationId: api_v1_campaigns_subscribers_user_partial_update
      parameters:
      - in: path
        name: campaign_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: user_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - campaigns
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCampaignSubscriber'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCampaignSubscriber'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCampaignSubscriber'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignSubscriber'
          description: ''
    delete:
      operationId: api_v1_campaigns_subscribers_user_destroy
      parameters:
      - in: path
        name: campaign_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: user_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - campaigns
      responses:
        '204':
          description: No response body
  /api/v1/email-templates/{campaign_id}/:
    get:
      operationId: api_v1_email_templates_list
      parameters:
      - in: path
        name: campaign_id
        schema:
          type: string
          format: uuid
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - email templates
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEmailTemplateList'
          description: ''
  /api/v1/email-templates/{campaign_id}/templates/:
    post:
      operationId: api_v1_email_templates_templates_create
      parameters:
      - in: path
        name: campaign_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - email templates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailTemplate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmailTemplate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmailTemplate'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailTemplate'
          description: ''
  /api/v1/email-templates/{campaign_id}/templates/{template_id}/:
    get:
      operationId: api_v1_email_templates_templates_retrieve
      parameters:
      - in: path
        name: campaign_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: template_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - email templates
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailTemplate'
          description: ''
    put:
      operationId: api_v1_email_templates_templates_update
      parameters:
      - in: path
        name: campaign_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: template_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - email templates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailTemplate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmailTemplate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmailTemplate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailTemplate'
          description: ''
    patch:
      operationId: api_v1_email_templates_templates_partial_update
      parameters:
      - in: path
        name: campaign_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: template_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - email templates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEmailTemplate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEmailTemplate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEmailTemplate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailTemplate'
          description: ''
    delete:
      operationId: api_v1_email_templates_templates_destroy
      parameters:
      - in: path
        name: campaign_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: template_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - email templates
      responses:
        '204':
          description: No response body
  /api/v1/payment/config/:
    get:
      operationId: api_v1_payment_config_retrieve
      tags:
      - config
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Config'
          description: ''
  /api/v1/payment/me/subscriptions/:
    get:
      operationId: api_v1_payment_me_subscriptions_list
      description: Get all current user subscriptions
      tags:
      - payments
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscription'
          description: ''
  /api/v1/payment/me/subscriptions/cancel/:
    post:
      operationId: api_v1_payment_me_subscriptions_cancel_create
      description: Cancel a subscription
      tags:
      - payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelResumeSubscription'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CancelResumeSubscription'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CancelResumeSubscription'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelResumeSubscription'
          description: ''
  /api/v1/payment/me/subscriptions/resume/:
    post:
      operationId: api_v1_payment_me_subscriptions_resume_create
      description: Resume a subscription
      tags:
      - payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelResumeSubscription'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CancelResumeSubscription'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CancelResumeSubscription'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelResumeSubscription'
          description: ''
  /api/v1/payment/subscribe/:
    post:
      operationId: api_v1_payment_subscribe_create
      tags:
      - payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSubscription'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateSubscription'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateSubscription'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                subscription_id: string
                client_secret: string
          description: ''
  /api/v1/payment/subscriptions/:
    get:
      operationId: api_v1_payment_subscriptions_retrieve
      description: Get all subscription plans
      tags:
      - payments
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/v1/workspace/:
    get:
      operationId: api_v1_workspace_list
      description: List all workspaces that the user is a member of.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - workspace
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedWorkspaceList'
          description: ''
    post:
      operationId: api_v1_workspace_create
      description: Create a new workspace.
      tags:
      - workspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WorkspaceCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WorkspaceCreate'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceCreate'
          description: ''
  /api/v1/workspace/{id}/:
    get:
      operationId: api_v1_workspace_retrieve
      description: Retrieve workspace.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this workspace.
        required: true
      tags:
      - workspace
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
          description: ''
    put:
      operationId: api_v1_workspace_update
      description: Update workspace.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this workspace.
        required: true
      tags:
      - workspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workspace'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Workspace'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Workspace'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
          description: ''
    patch:
      operationId: api_v1_workspace_partial_update
      description: Partial update workspace.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this workspace.
        required: true
      tags:
      - workspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedWorkspace'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedWorkspace'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedWorkspace'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
          description: ''
    delete:
      operationId: api_v1_workspace_destroy
      description: Delete workspace.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this workspace.
        required: true
      tags:
      - workspace
      responses:
        '204':
          description: No response body
  /api/v1/workspace/{id}/invite/:
    post:
      operationId: api_v1_workspace_invite_create
      description: Invite user to workspace.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this workspace.
        required: true
      tags:
      - workspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceInvite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WorkspaceInvite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WorkspaceInvite'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceInvite'
          description: ''
  /api/v1/workspace/{workspace_pk}/keys/:
    get:
      operationId: api_v1_workspace_keys_list
      description: List all workspace API Keys
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: workspace_pk
        schema:
          type: string
        required: true
      tags:
      - workspace keys
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAPIKeyList'
          description: ''
    post:
      operationId: api_v1_workspace_keys_create
      description: Create a new workspace API Key
      parameters:
      - in: path
        name: workspace_pk
        schema:
          type: string
        required: true
      tags:
      - workspace keys
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/APIKey'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/APIKey'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/APIKey'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIKey'
          description: ''
  /api/v1/workspace/{workspace_pk}/keys/{id}/:
    delete:
      operationId: api_v1_workspace_keys_destroy
      description: Revoke a workspace API Key
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: workspace_pk
        schema:
          type: string
        required: true
      tags:
      - workspace keys
      responses:
        '204':
          description: No response body
  /api/v1/workspace/{workspace_pk}/members/:
    get:
      operationId: api_v1_workspace_members_list
      description: List workspace members.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: workspace_pk
        schema:
          type: string
        required: true
      tags:
      - workspace members
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedWorkspaceMembershipList'
          description: ''
  /api/v1/workspace/{workspace_pk}/members/{user__pk}/:
    get:
      operationId: api_v1_workspace_members_retrieve
      description: Retrieve workspace member.
      parameters:
      - in: path
        name: user__pk
        schema:
          type: string
        required: true
      - in: path
        name: workspace_pk
        schema:
          type: string
        required: true
      tags:
      - workspace members
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceMembership'
          description: ''
    put:
      operationId: api_v1_workspace_members_update
      description: Update workspace member.
      parameters:
      - in: path
        name: user__pk
        schema:
          type: string
        required: true
      - in: path
        name: workspace_pk
        schema:
          type: string
        required: true
      tags:
      - workspace members
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceMembership'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WorkspaceMembership'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WorkspaceMembership'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceMembership'
          description: ''
    patch:
      operationId: api_v1_workspace_members_partial_update
      description: Partial update workspace member.
      parameters:
      - in: path
        name: user__pk
        schema:
          type: string
        required: true
      - in: path
        name: workspace_pk
        schema:
          type: string
        required: true
      tags:
      - workspace members
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedWorkspaceMembership'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedWorkspaceMembership'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedWorkspaceMembership'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceMembership'
          description: ''
    delete:
      operationId: api_v1_workspace_members_destroy
      description: Delete workspace member.
      parameters:
      - in: path
        name: user__pk
        schema:
          type: string
        required: true
      - in: path
        name: workspace_pk
        schema:
          type: string
        required: true
      tags:
      - workspace members
      responses:
        '204':
          description: No response body
  /api/v1/workspace/invite/accept/:
    post:
      operationId: api_v1_workspace_invite_accept_create
      description: Accept invitation to workspace.
      tags:
      - workspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceInvitationAccept'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WorkspaceInvitationAccept'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WorkspaceInvitationAccept'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceInvitationAccept'
          description: ''
components:
  schemas:
    APIKey:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          description: A free-form name for the API key. Need not be unique. 50 characters
            max.
          maxLength: 50
        key:
          type: string
          readOnly: true
          nullable: true
        revoked:
          type: boolean
          readOnly: true
          description: If the API key is revoked, clients cannot use it anymore. (This
            cannot be undone.)
        created:
          type: string
          format: date-time
          readOnly: true
      required:
      - created
      - id
      - key
      - revoked
    Activation:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
      required:
      - token
      - uid
    CampaignSubscriber:
      type: object
      properties:
        email:
          type: string
          format: email
          title: Subscriber email
          maxLength: 254
        tracking_data:
          type: object
          additionalProperties: {}
          nullable: true
        joined_at:
          type: string
          format: date-time
          readOnly: true
        id:
          type: string
          format: uuid
          readOnly: true
      required:
      - email
      - id
      - joined_at
    CancelResumeSubscription:
      type: object
      properties:
        subscription_id:
          type: string
      required:
      - subscription_id
    Config:
      type: object
      properties:
        publishable_key:
          type: string
      required:
      - publishable_key
    CreateSubscription:
      type: object
      properties:
        price_id:
          type: string
      required:
      - price_id
    CurrentUser:
      type: object
      properties:
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        id:
          type: string
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
          title: Email address
        date_joined:
          type: string
          format: date-time
          readOnly: true
        last_login:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - date_joined
      - email
      - id
      - last_login
    CustomTokenObtainPair:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
      required:
      - email
      - password
    CustomTokenVerify:
      type: object
      properties:
        token:
          type: string
    CustomUser:
      type: object
      properties:
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        id:
          type: string
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
          title: Email address
        date_joined:
          type: string
          format: date-time
          readOnly: true
        last_login:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - date_joined
      - email
      - id
      - last_login
    CustomUserCreateSerliazier:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        id:
          type: string
          readOnly: true
        password:
          type: string
          writeOnly: true
        re_password:
          type: string
      required:
      - email
      - first_name
      - id
      - last_name
      - password
      - re_password
    EmailTemplate:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 250
        subject:
          type: string
          maxLength: 998
        content:
          type: string
        extra_data:
          type: object
          additionalProperties: {}
        last_sent_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - content
      - extra_data
      - id
      - last_sent_at
      - subject
    PaginatedAPIKeyList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/APIKey'
    PaginatedCustomUserList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/CustomUser'
    PaginatedEmailTemplateList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/EmailTemplate'
    PaginatedWorkspaceList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Workspace'
    PaginatedWorkspaceMembershipList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/WorkspaceMembership'
    PasswordResetConfirmRetype:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
        new_password:
          type: string
        re_new_password:
          type: string
      required:
      - new_password
      - re_new_password
      - token
      - uid
    PatchedCampaignSubscriber:
      type: object
      properties:
        email:
          type: string
          format: email
          title: Subscriber email
          maxLength: 254
        tracking_data:
          type: object
          additionalProperties: {}
          nullable: true
        joined_at:
          type: string
          format: date-time
          readOnly: true
        id:
          type: string
          format: uuid
          readOnly: true
    PatchedCurrentUser:
      type: object
      properties:
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        id:
          type: string
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
          title: Email address
        date_joined:
          type: string
          format: date-time
          readOnly: true
        last_login:
          type: string
          format: date-time
          readOnly: true
          nullable: true
    PatchedCustomUser:
      type: object
      properties:
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        id:
          type: string
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
          title: Email address
        date_joined:
          type: string
          format: date-time
          readOnly: true
        last_login:
          type: string
          format: date-time
          readOnly: true
          nullable: true
    PatchedEmailTemplate:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 250
        subject:
          type: string
          maxLength: 998
        content:
          type: string
        extra_data:
          type: object
          additionalProperties: {}
        last_sent_at:
          type: string
          format: date-time
          readOnly: true
    PatchedWorkspace:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          title: Workspace name
          maxLength: 120
        description:
          type: string
          title: Workspace description
          maxLength: 1024
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        campaign:
          type: string
          format: uuid
          readOnly: true
    PatchedWorkspaceMembership:
      type: object
      properties:
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        role:
          $ref: '#/components/schemas/WorkspaceMembershipRoleEnum'
    Product:
      type: object
      properties:
        product_id:
          type: string
        name:
          type: string
        description:
          type: string
        features:
          type: array
          items: {}
        prices:
          type: array
          items: {}
          readOnly: true
      required:
      - description
      - features
      - name
      - prices
      - product_id
    SendEmailReset:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    SetPasswordRetype:
      type: object
      properties:
        new_password:
          type: string
        re_new_password:
          type: string
        current_password:
          type: string
      required:
      - current_password
      - new_password
      - re_new_password
    SetUsername:
      type: object
      properties:
        current_password:
          type: string
        new_email:
          type: string
          format: email
          title: Email address
          maxLength: 254
      required:
      - current_password
      - new_email
    Subscription:
      type: object
      properties:
        id:
          type: string
        current_period_end:
          type: string
          format: date-time
        cancel_at:
          type: string
          format: date-time
          nullable: true
        status:
          type: string
        price:
          type: integer
        currency:
          type: string
        plan_name:
          type: string
          maxLength: 255
        plan_description:
          type: string
          maxLength: 500
      required:
      - cancel_at
      - current_period_end
      - id
      - status
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    User:
      type: object
      properties:
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        id:
          type: string
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
          title: Email address
      required:
      - email
      - id
    UsernameResetConfirm:
      type: object
      properties:
        new_email:
          type: string
          format: email
          title: Email address
          maxLength: 254
      required:
      - new_email
    Workspace:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          title: Workspace name
          maxLength: 120
        description:
          type: string
          title: Workspace description
          maxLength: 1024
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        campaign:
          type: string
          format: uuid
          readOnly: true
      required:
      - campaign
      - created
      - description
      - id
      - name
      - updated
    WorkspaceCreate:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          title: Workspace name
          maxLength: 120
        description:
          type: string
          title: Workspace description
          maxLength: 1024
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        memberships:
          type: array
          items:
            $ref: '#/components/schemas/WorkspaceMembership'
          readOnly: true
      required:
      - created
      - description
      - id
      - memberships
      - name
      - updated
    WorkspaceInvitationAccept:
      type: object
      properties:
        uid:
          type: string
        workspace_id:
          type: string
        token:
          type: string
      required:
      - token
      - uid
      - workspace_id
    WorkspaceInvite:
      type: object
      properties:
        email:
          type: string
          format: email
        role:
          allOf:
          - $ref: '#/components/schemas/WorkspaceInviteRoleEnum'
          default: member
      required:
      - email
    WorkspaceInviteRoleEnum:
      enum:
      - moderator
      - member
      type: string
      description: |-
        * `moderator` - Moderator
        * `member` - Member
    WorkspaceMembership:
      type: object
      properties:
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        role:
          $ref: '#/components/schemas/WorkspaceMembershipRoleEnum'
      required:
      - role
      - user
    WorkspaceMembershipRoleEnum:
      enum:
      - admin
      - moderator
      - member
      type: string
      description: |-
        * `admin` - Admin
        * `moderator` - Moderator
        * `member` - Member
